{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if and .Values.tls.enabled (not .Values.tls.existingSecret) (or (not .Values.tls.autoGenerated.enabled) (and .Values.tls.autoGenerated.enabled (eq .Values.tls.autoGenerated.engine "helm"))) }}
{{- $secretName := include "mariadb.tls.secretName" . }}
{{- $caValue := "" }}
{{- $certValue := "" }}
{{- $keyValue := "" }}
{{- if .Values.tls.autoGenerated.enabled }}
  {{- $releaseNamespace := include "common.names.namespace" . }}
  {{- $clusterDomain := .Values.clusterDomain }}
  {{- $headlessServiceName := printf "%s-headless" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
  {{- $loopback := .Values.tls.autoGenerated.loopback }}
  {{- $ipAddresses := ternary (list "127.0.0.1") nil $loopback }}
  {{- $extraSANs := .Values.tls.autoGenerated.extraSANs | default (list) }}
  {{- $ca := genCA "mariadb-ca" 365 }}
  {{- $caValue = $ca.Cert }}
  {{- /* Cert generation */ -}}
  {{- $primaryServiceName := include "mariadb.primary.fullname" . }}
  {{- $secondaryServiceName := include "mariadb.secondary.fullname" . }}
  {{- $sans := include "common.certs.sans" (dict "namespace" $releaseNamespace "clusterDomain" $clusterDomain "serviceName" $primaryServiceName "headlessServiceName" $headlessServiceName "loopback" $loopback "extraSANs" $extraSANs) | splitList " " | uniq }}
  {{- $sans = include "common.certs.sans" (dict "namespace" $releaseNamespace "clusterDomain" $clusterDomain "serviceName" $secondaryServiceName) | splitList " " | concat $sans | uniq }}
  {{- $cert := genSignedCert $primaryServiceName $ipAddresses $sans 365 $ca }}
  {{- $certValue = $cert.Cert }}
  {{- $keyValue = $cert.Key }}
{{- else }}
  {{- $caValue = .Values.tls.ca }}
  {{- $certValue = required "When tls.autoGenerated.enabled=false you need to provide tls.cert" .Values.tls.cert }}
  {{- $keyValue = required "When tls.autoGenerated.enabled=false you need to provide tls.key" .Values.tls.key }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" .) | nindent 4 }}
    app.kubernetes.io/part-of: mariadb
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" .) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.crt" "defaultValue" $certValue "context" .) }}
  tls.key: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.key" "defaultValue" $keyValue "context" .) }}
  {{- if $caValue }}
  ca.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "ca.crt" "defaultValue" $caValue "context" .) }}
  {{- end }}
{{- end }}
